{"version":3,"sources":["components/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/pages/PeoplePage.tsx","components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","index.tsx"],"names":["PeopleTable","person","selectedSlug","useParams","slug","findParent","people","parentName","parent","find","item","name","to","className","classNames","sex","map","born","died","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPerson","isLoading","setLoading","isError","setError","isListEmpty","length","getPeopleServer","arrayPeople","useEffect","PageNavLink","text","isActive","MainNav","role","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aba57d2b.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person[]\n};\n\nexport const PeopleTable: FC<Props> = ({ person }) => {\n  const { slug: selectedSlug } = useParams();\n\n  function findParent(people: Person[], parentName: string | null) {\n    const parent = people.find(item => item.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`../${parent.slug}`}\n          className={classNames({ 'has-text-danger': parent.sex === 'f' })}\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  }\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {person.map((item) => (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': item.slug === selectedSlug },\n              )}\n            >\n\n              <td key={item.slug}>\n                <Link\n                  to={`/people/${item.slug}`}\n                  className={\n                    classNames({ 'has-text-danger': item.sex === 'f' })\n                  }\n                >\n                  {item.name}\n                </Link>\n              </td>\n\n              <td>{item.sex}</td>\n              <td>{item.born}</td>\n              <td>{item.died}</td>\n\n              <td>{findParent(person, item.motherName)}</td>\n              <td>{findParent(person, item.fatherName)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [person, setPerson] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const isListEmpty = !person.length && !isLoading && !isError;\n\n  const getPeopleServer = async () => {\n    setLoading(true);\n    try {\n      const arrayPeople = await getPeople();\n\n      setPerson(arrayPeople);\n    } catch {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {(!isLoading && !isListEmpty) && <PeopleTable person={person} />}\n\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isListEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\n type Props = {\n   to: string;\n   text: string;\n };\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={\n      ({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )\n    }\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/pages/PeoplePage';\nimport { MainNav } from './components/MainNav';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route index element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<p>Page not found</p>} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}